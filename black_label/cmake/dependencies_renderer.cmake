# BlackLabel
find_package(BlackLabel 0.1 QUIET REQUIRED file_buffer)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${BlackLabel_FILE_BUFFER_LIBRARIES})

# Boost
find_package(Boost ${COMMON_BOOST_VERSION} QUIET REQUIRED log serialization atomic)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${Boost_INCLUDE_DIRS})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES
	${Boost_LOG_LIBRARIES}
	${Boost_SERIALIZATION_LIBRARIES})

# GLEW
find_package(GLEW REQUIRED)
add_definitions("-DGLEW_STATIC")
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${GLEW_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${GLEW_LIBRARY})

# OpenGL
find_package(OpenGL REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${OPENGL_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${OPENGL_gl_LIBRARY})

# SFML
set(SFML_STATIC_LIBRARIES TRUE)
add_definitions("-DSFML_STATIC")
find_package(SFML REQUIRED graphics)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${SFML_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${SFML_LIBRARIES})

# Winmm (SFML Dependency on Windows)
if(WIN32)
	list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES "winmm.lib")
	add_definitions("-DNOMINMAX")
endif()

# JPEG (SFML Dependency)
find_package(JPEG REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${JPEG_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${JPEG_LIBRARIES})

# ASSIMP
find_package(ASSIMP REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${ASSIMP_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${ASSIMP_LIBRARIES})

# ZLIB (ASSIMP Dependency)
find_package(ZLIB REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${ZLIB_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${ZLIB_LIBRARY})

# FBX
find_package(FBX QUIET)
if(FBX_FOUND)
	list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${FBX_INCLUDE_DIR})
	list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${FBX_LIBRARIES})
else()
	add_definitions("-DNO_FBX")
endif()

# OpenColorIO
find_package(OPENCOLORIO REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${OPENCOLORIO_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${OPENCOLORIO_LIBRARIES})

# TinyXML (OpenColorIO Dependency)
find_package(TINYXML REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${TINYXML_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${TINYXML_LIBRARIES})

# YAMLCPP (OpenColorIO Dependency)
find_package(YAMLCPP REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${YAMLCPP_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${YAMLCPP_LIBRARIES})

# GLI
find_package(GLI REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${GLI_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${GLI_LIBRARIES})

# Squish
find_package(LIBSQUISH REQUIRED)
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_INCLUDE_DIRS ${LIBSQUISH_INCLUDE_DIR})
list(APPEND BlackLabel_DEPENDENCIES_RENDERER_LIBRARIES ${LIBSQUISH_LIBRARIES})